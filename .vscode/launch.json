{
    // Use IntelliSense to learn about possible attributes.
    // Hover to view descriptions of existing attributes.
    // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387
    "version": "0.2.0",
    "configurations": [
        {
            "name": "(lua) Debug",
            "type": "lua",
            "request": "launch",
            "program": "${workspaceFolder}/main.lua",
            "luaexe": "${command:cmake.launchTargetPath}",
            "cwd": "${command:cmake.launchTargetDirectory}",
            "stopOnEntry": true,
            "path": "${workspaceFolder}/lib/?.lua;${workspaceFolder}/lib/?/init.lua;${workspaceFolder}/lua_modules/share/lua/5.4/?.lua",
            "cpath": "${workspaceFolder}/lua_modules/lib/lua/5.4/?.so",
            "preLaunchTask": "build-deps"
        },
        {
            "name": "(c++) Debug",
            "type": "cppdbg",
            "request": "launch",
            "program": "${command:cmake.launchTargetPath}",
            "args": ["${workspaceFolder}/main.lua"],
            "environment": [
                {
                    "name": "LUA_PATH",
                    "value": "${workspaceFolder}/lib/?.lua;${workspaceFolder}/lib/?/init.lua;${workspaceFolder}/lua_modules/share/lua/5.4/?.lua"
                },
                {
                    "name": "LUA_CPATH",
                    "value": "${workspaceFolder}/lua_modules/lib/lua/5.4/?.so"
                }
            ],
            "stopAtEntry": false,
            "cwd": "${command:cmake.launchTargetDirectory}",
            "externalConsole": false,
            "MIMode": "lldb",
            "preLaunchTask": "build-deps"
        },
        {
            "name": "(c++) Attach",
            "type": "cppdbg",
            "request": "attach",
            "program": "${command:cmake.launchTargetPath}",
            "processId": "${input:lua-pid}",
            "MIMode": "lldb"
        },
    ],
    "inputs": [
        {
            "id": "lua-pid",
            "type": "command",
            "command": "shellCommand.execute",
            "args": {
                "command": "pgrep ${command:cmake.launchTargetFilename}",
                "useSingleResult": true
            }
        }
    ]
}
